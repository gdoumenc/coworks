// Do NOT edit this file as it is auto-generated by cws



provider "aws" {
  profile = "fpr-customer"
  region = "eu-west-1"
}

# ---------------------------------------------------------------------------------------------------------------------
# LOCAL FOR THIS CUSTOMER
# ---------------------------------------------------------------------------------------------------------------------

locals {
    when_default = terraform.workspace == "default" ? 1 : 0
    when_stage = terraform.workspace != "default" ? 1 : 0
}

locals {
  simpleodoomicroservice_bucket = "coworks-microservice"
  simpleodoomicroservice_key = "simpleodoomicroservice/archive.zip"
  simpleodoomicroservice_python = "python3.7"
  simpleodoomicroservice_role_arn = join("", aws_iam_role.microservice.*.arn, data.aws_iam_role.microservice.*.arn)
  simpleodoomicroservice_security_group_ids = []
  simpleodoomicroservice_vpc_id = []
  simpleodoomicroservice_subnet_ids = []
  simpleodoomicroservice_tags = {
    Product: "microservice"
    Creator: "coworks"
  }
}


data "aws_lambda_layer_version" "simpleodoomicroservice" {
  for_each = {for layer_name in ["arn:aws:lambda:eu-west-1:935392763270:layer:coworks-dev"]: layer_name => layer_name}
  layer_name = each.value
}
locals {
  simpleodoomicroservice_layer_arns = [for layer in data.aws_lambda_layer_version.simpleodoomicroservice : layer.arn]
}



resource "aws_iam_role" "microservice" {
  count = local.when_default
  name = "simpleodoomicroservice_microservice_role"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": [
          "lambda.amazonaws.com",
          "apigateway.amazonaws.com"
        ]
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF

  tags = {
    Product: "microservice"
    Creator: "coworks"
  }
}

resource "aws_iam_role_policy_attachment" "s3" {
  count = local.when_default
  role = join("", aws_iam_role.microservice.*.name)
  policy_arn = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
}

resource "aws_iam_role_policy_attachment" "cloud_watch" {
  count = local.when_default
  role = join("", aws_iam_role.microservice.*.name)
  policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
}

resource "aws_iam_role_policy_attachment" "xray" {
  count = local.when_default
  role = join("", aws_iam_role.microservice.*.name)
  policy_arn = "arn:aws:iam::aws:policy/AWSXrayFullAccess"
}

resource "aws_iam_role_policy_attachment" "step_functions" {
  count = local.when_default
  role = join("", aws_iam_role.microservice.*.name)
  policy_arn = "arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess"
}

data "aws_iam_role" "microservice" {
  count = local.when_stage
  name = "simpleodoomicroservice_microservice_role"
}

locals {
  simpleodoomicroservice_api_id = join("", aws_api_gateway_rest_api.simpleodoomicroservice.*.id, data.aws_api_gateway_rest_api.simpleodoomicroservice.*.id)
  simpleodoomicroservice_api_root_id = join("", aws_api_gateway_rest_api.simpleodoomicroservice.*.root_resource_id, data.aws_api_gateway_rest_api.simpleodoomicroservice.*.root_resource_id)
  simpleodoomicroservice_lambda_uri = join("", aws_lambda_function.simpleodoomicroservice.*.invoke_arn, data.aws_lambda_function.simpleodoomicroservice.*.invoke_arn)
  simpleodoomicroservice_lambda_function_name = join("", aws_lambda_function.simpleodoomicroservice.*.function_name , data.aws_lambda_function.simpleodoomicroservice.*.function_name)
}


# ---------------------------------------------------------------------------------------------------------------------
# API GATEWAY
# ---------------------------------------------------------------------------------------------------------------------

resource "aws_api_gateway_rest_api" "simpleodoomicroservice" {
  count = local.when_default
  name = "simpleodoomicroservice"
  description = ""
  
  tags = local.simpleodoomicroservice_tags

  lifecycle {
    prevent_destroy = true
  }
}

data "aws_api_gateway_rest_api" "simpleodoomicroservice" {
  count = local.when_stage
  name = "simpleodoomicroservice"
}

resource "aws_api_gateway_authorizer" "simpleodoomicroservice" {
  count = local.when_default
  name = "simpleodoomicroservice-auth"
  rest_api_id = local.simpleodoomicroservice_api_id
  authorizer_uri = local.simpleodoomicroservice_lambda_uri
}

# since at least one integration in needed to create api deployment we create an empty resource to prevent terraform from failing the first time we deploy the microservice
resource "aws_api_gateway_resource" "simpleodoomicroservice_null_resource" {
  count = 0
  path_part = "null_resource"
  parent_id = local.simpleodoomicroservice_api_root_id
  rest_api_id = local.simpleodoomicroservice_api_id
}
resource "aws_api_gateway_method" "simpleodoomicroservice_null_method" {
  count = 0
  rest_api_id = local.simpleodoomicroservice_api_id
  resource_id = join("", aws_api_gateway_resource.simpleodoomicroservice_null_resource.*.id)
  http_method = "GET"
  authorization = "NONE"
}
resource "aws_api_gateway_integration" "simpleodoomicroservice_null_integration" {
  count = 0
  rest_api_id = local.simpleodoomicroservice_api_id
  resource_id = join("", aws_api_gateway_resource.simpleodoomicroservice_null_resource.*.id)
  http_method = join("", aws_api_gateway_method.simpleodoomicroservice_null_method.*.http_method)
  integration_http_method = "GET"
  type = "MOCK"
}


    resource "aws_api_gateway_resource" "simpleodoomicroservice___config" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "config"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___config__0" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___config[0].id
      
      path_part = "{_0}"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___config__0_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___config__0_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___config__0_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___config__0_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___config__0_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___config__0_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___config__0_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___config__0_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___config__0_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___config__0_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___config__0_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___config__0[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___config__0_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___config__0_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___dashboard" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "dashboard"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___dashboard_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___dashboard_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___dashboard_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___dashboard_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___dashboard_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___dashboard_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___dashboard_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___dashboard_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___dashboard_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___dashboard_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___dashboard_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___dashboard[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___dashboard_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___dashboard_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___invoices" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "invoices"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___invoices_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___invoices_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___invoices_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___invoices_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___invoices_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___invoices_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___invoices_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___invoices_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___invoices_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___invoices_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___invoices_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___invoices[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___invoices_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___invoices_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___table" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "table"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___table_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___table_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___table_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___table_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___table_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___table_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___table_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___table_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___table_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___table_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___table_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___table[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___table_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___table_OPTIONS,
        ]
      }
    
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = local.simpleodoomicroservice_api_root_id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___field" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "field"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___field__0" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___field[0].id
      
      path_part = "{_0}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___field__0__1" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___field__0[0].id
      
      path_part = "{_1}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___field__0__1__2" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1[0].id
      
      path_part = "{_2}"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___field__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___field__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___field__0__1__2_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___field__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___field__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___field__0__1__2_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___field__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___field__0__1__2_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___field__0__1__2_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___field__0__1__2_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___field__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___field__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___field__0__1__2_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___field__0__1__2_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___fields" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "fields"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___fields__0" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___fields[0].id
      
      path_part = "{_0}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___fields__0__1" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0[0].id
      
      path_part = "{_1}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___fields__0__1__2" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1[0].id
      
      path_part = "{_2}"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___fields__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___fields__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___fields__0__1__2_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___fields__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___fields__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___fields__0__1__2_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___fields__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___fields__0__1__2_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___fields__0__1__2_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___fields__0__1__2_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___fields__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___fields__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___fields__0__1__2_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___fields__0__1__2_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___id" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "id"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___id__0" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___id[0].id
      
      path_part = "{_0}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___id__0__1" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___id__0[0].id
      
      path_part = "{_1}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___id__0__1__2" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1[0].id
      
      path_part = "{_2}"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___id__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___id__0__1__2_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___id__0__1__2_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___id__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___id__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___id__0__1__2_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___id__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___id__0__1__2_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___id__0__1__2_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___id__0__1__2_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___id__0__1__2_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___id__0__1__2[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___id__0__1__2_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___id__0__1__2_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___model" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "model"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___model__0" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___model[0].id
      
      path_part = "{_0}"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___model__0__1" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___model__0[0].id
      
      path_part = "{_1}"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___model__0__1_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___model__0__1_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___model__0__1_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___model__0__1_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___model__0__1_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___model__0__1_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___model__0__1_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___model__0__1_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___model__0__1_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___model__0__1_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___model__0__1_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___model__0__1[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___model__0__1_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___model__0__1_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___admin" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = local.simpleodoomicroservice_api_root_id
      
      path_part = "admin"
    }
  
    resource "aws_api_gateway_resource" "simpleodoomicroservice___admin_context" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___admin[0].id
      
      path_part = "context"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___admin_context_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___admin_context_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_context_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___admin_context_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___admin_context_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_context_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___admin_context_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___admin_context_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___admin_context_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___admin_context_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___admin_context_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_context[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_context_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___admin_context_OPTIONS,
        ]
      }
    
    resource "aws_api_gateway_resource" "simpleodoomicroservice___admin_routes" {
      count = local.when_default
      rest_api_id = local.simpleodoomicroservice_api_id
      
      parent_id = aws_api_gateway_resource.simpleodoomicroservice___admin[0].id
      
      path_part = "routes"
    }
  
    
      resource "aws_api_gateway_method" "simpleodoomicroservice___admin_routes_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method = "GET"
        
        authorization = "NONE"
        
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___admin_routes_GET" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_routes_GET.*.http_method)
        integration_http_method = "POST"
        type = "AWS_PROXY"
        uri = local.simpleodoomicroservice_lambda_uri
      }
    

    
      resource "aws_api_gateway_method" "simpleodoomicroservice___admin_routes_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method = "OPTIONS"
        authorization = "NONE"
      }

      resource "aws_api_gateway_integration" "simpleodoomicroservice___admin_routes_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_routes_OPTIONS.*.http_method)
        type = "MOCK"
        request_templates = {
          "application/json" = "{ \"statusCode\": 200 }"
        }
      }

      resource "aws_api_gateway_integration_response" "simpleodoomicroservice___admin_routes_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method =  join("", aws_api_gateway_method.simpleodoomicroservice___admin_routes_OPTIONS.*.http_method)
        response_parameters = {}
        status_code = 200
        response_templates = {
          "application/json": "{}"
        }
        depends_on = [
          aws_api_gateway_integration.simpleodoomicroservice___admin_routes_OPTIONS,
          aws_api_gateway_method_response.simpleodoomicroservice___admin_routes_OPTIONS,
        ]
      }

      resource "aws_api_gateway_method_response" "simpleodoomicroservice___admin_routes_OPTIONS" {
        count = local.when_default
        rest_api_id = local.simpleodoomicroservice_api_id
        resource_id = aws_api_gateway_resource.simpleodoomicroservice___admin_routes[0].id
        http_method = join("", aws_api_gateway_method.simpleodoomicroservice___admin_routes_OPTIONS.*.http_method)
        status_code = 200
        response_models = {
          "application/json" = "Empty"
        }
        response_parameters = {
          "method.response.header.Access-Control-Allow-Headers" = true,
          "method.response.header.Access-Control-Allow-Methods" = true,
          "method.response.header.Access-Control-Allow-Origin" = true
        }

        depends_on = [
          aws_api_gateway_method.simpleodoomicroservice___admin_routes_OPTIONS,
        ]
      }
    



resource "aws_api_gateway_deployment" "simpleodoomicroservice" {
  count = local.when_stage
  rest_api_id = local.simpleodoomicroservice_api_id

  
  triggers = {
    timestamp = timestamp() 
  }
  lifecycle {
    create_before_destroy = true
  }
  
}

resource "aws_api_gateway_stage" "simpleodoomicroservice" {
  count = local.when_stage
  stage_name = terraform.workspace
  rest_api_id = local.simpleodoomicroservice_api_id
  deployment_id = aws_api_gateway_deployment.simpleodoomicroservice[0].id
  xray_tracing_enabled = true
}

# ---------------------------------------------------------------------------------------------------------------------
# OUTPUT
# ---------------------------------------------------------------------------------------------------------------------

output "simpleodoomicroservice" {
value = {
    "id" = terraform.workspace == "default" ? aws_api_gateway_rest_api.simpleodoomicroservice[0].id : ""
  }
}

locals {
    
    environment_variables_simpleodoomicroservice = [
        for envars_string in data.local_file.environment_variables_files_simpleodoomicroservice: jsondecode(envars_string.content)
    ]
    
}

# ---------------------------------------------------------------------------------------------------------------------
# LAMBDA
# ---------------------------------------------------------------------------------------------------------------------

data "aws_s3_bucket_object" "simpleodoomicroservice-b64sha256" {
  bucket = local.simpleodoomicroservice_bucket
  key = "${local.simpleodoomicroservice_key}.b64sha256"
}


data "local_file" "environment_variables_files_simpleodoomicroservice" {
  for_each = {for envar_file in ["vars.secret.json"]: envar_file => "../${envar_file}"}
  filename = each.value
}


resource "aws_lambda_function" "simpleodoomicroservice" {
  count = local.when_stage
  function_name = "simpleodoomicroservice-${terraform.workspace}"
  s3_bucket = local.simpleodoomicroservice_bucket
  s3_key = local.simpleodoomicroservice_key
  source_code_hash =  data.aws_s3_bucket_object.simpleodoomicroservice-b64sha256.body
  role = local.simpleodoomicroservice_role_arn
  handler = "service.odoo"
  
  layers = local.simpleodoomicroservice_layer_arns
  
  runtime = local.simpleodoomicroservice_python
  timeout = 30
  memory_size = 128
  
  environment {
    variables = merge(null,[for item in local.environment_variables_simpleodoomicroservice: merge(item,local.environment_variables_simpleodoomicroservice...)][0], {"WORKSPACE":"dev"})
  }
  
  tracing_config {
    mode = "Active"
  }
  vpc_config {
    security_group_ids = local.simpleodoomicroservice_security_group_ids
    subnet_ids = local.simpleodoomicroservice_subnet_ids
  }
  tags = local.simpleodoomicroservice_tags
}

data "aws_lambda_function" "simpleodoomicroservice" {
  count = local.when_default
  function_name = "simpleodoomicroservice-dev"
}

resource "aws_lambda_permission" "simpleodoomicroservice" {
  count = local.when_stage
  statement_id = "AllowExecutionFromAPIGateway"
  action = "lambda:InvokeFunction"
  function_name = local.simpleodoomicroservice_lambda_function_name
  principal = "apigateway.amazonaws.com"
  source_arn = "${join("", data.aws_api_gateway_rest_api.simpleodoomicroservice.*.execution_arn)}/*/*"
  depends_on = [aws_lambda_function.simpleodoomicroservice]
}
